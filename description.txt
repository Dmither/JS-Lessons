F12 - відкрити панель розробника в браузері

Код на JS пишеться в Head або вкінці Body (рекомендовано) напряму
    або підключенням файлу js (<script src='script.js'></script>)

console.log(); - команда виводу на консоль

Кожна команда починається із нового рядка та закінчуватись ";"
Для підключення нових функцій спочатку підключаємо строгий режим
    "use strict", який забороняє об'яву змінних без ключового слова

Об'ява змінної:
    let - КС об'яви змінної (lowCamelCase)
    var - КС змінної, яку видно поза блоком кода (крім ф-цій)
    const - КС об'яви константи (постійної, незмінної) (UPPER_CASE)

JS - динамічно-типізована МП, тип змінної міняється в процесі
    undefined - невизначена змінна (неініціалізована)
    null - визначена змінна без інформації
    boolean - змінна логічного типу (true / false)
    number - цілі та дробові числа (Infinity, -Infinity, NaN)
    bigInt - дуже великі числа (1234567890123456789n)
    string - строкова змінна ("" '' ``)
    object - змінна складної строки ({name: "", age: 23})
    symbol - унікальний ідентифікатор об'єкта
    function - споріднений до object тип для об'яви ф-цій
typeof(variable) - поверне тип змінної
Явне перетворення змінних відбувається за доп. одноіменних ф-цій:
    let str22 = String(22);     let num22 = Number(str22);

Оператори: 
    базові "+" "-" "*" "/" "%" "**";
        (бінарний "+" зі строкою - конкатенація 2+"2"="22" "4"-2=2
        всі інші оператори працюють з числами   22+""="22"  +"2"=2
    присвоєння: "=" "+=" "-=" "*=" "/=" "%=" "++" "--"
    порівняння: ">" ">=" "<" "<=" "==" "!=" "===" "!=="
        (порівняння строк посимвольно в алфавітному порядку; А < а;
        порівняння різних типів з числами приводить їх до числа;
        строге порівняння порівнює без приведення типів;
        undefined == null; undefined !== null)
    логічні: "&&" "||" "!" "??"
        (при двох нелогічних || поверне першу true, && - останню
        true або першу false: 24 || 46 = 24; 45 && 24 = 24;
        нелогічні з ! переводяться в логічні; !! перетворює в бул;
        ?? повертає перший, якщо він не undefined або null)

